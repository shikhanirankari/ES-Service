buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
     repositories {
        maven {
            url "http://jav-ap1d-too-7.adminsys.mrll.com:8080/nexus/content/repositories/central"
        }
	}
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven-publish'
apply plugin: "io.spring.dependency-management"
apply plugin: 'jacoco'
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
     afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/model/**',               //Directory name
                              '**/filter/**',
                              '**/util/**',
                              '**/validator/**',
                              '**/exceptionhandler/**',
                              '**/repository/**'])
        })
    }
    
}
check.dependsOn jacocoTestReport

jar {
    baseName = 'search-service'
    version = '0.0.1-SNAPSHOT'
}

// $ gradle publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            // TODO: Where to place these properties?
            groupId 'com.mrll.javelin'
            artifactId 'search-service'
            version '0.0.1-SNAPSHOT'

            from components.java
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    repositories {
        maven {
            url "http://jav-ap1d-too-7.adminsys.mrll.com:8080/nexus/content/repositories/central"
        }
        maven {
            url "http://jav-ap1d-too-7.adminsys.mrll.com:8080/nexus/content/repositories/snapshots"
        }
    }
}

dependencies {
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry"
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-config-client"

	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    
    //e;astic search
    compile 'org.elasticsearch:elasticsearch:2.3.1'
    compile 'org.apache.tika:tika-core:1.12'
    
	compile("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'io.springfox:springfox-swagger2:2.3.1'
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile('org.springframework.security.oauth:spring-security-oauth2:2.0.8.RELEASE')
    compile('org.springframework.security:spring-security-jwt:1.0.3.RELEASE')
    // Don't update this until 2.4.x
    // https://github.com/springfox/springfox/issues/1126
    compile 'io.springfox:springfox-swagger-ui:2.2.2'
	compile "com.googlecode.json-simple:json-simple"
    compile "com.google.code.gson:gson"
    compile("com.mrll.javelin:javelin-common-web:0.0.15-SNAPSHOT")
    compile("com.mrll.javelin:javelin-common-security:0.0.10-SNAPSHOT")
    compile "org.springframework.amqp:spring-rabbit:1.4.6.RELEASE"
    compile 'io.jmnarloch:request-correlation-spring-cloud-starter:1.2.0'

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.assertj:assertj-core:3.2.0")
    testCompile("com.jayway.restassured:spring-mock-mvc:2.8.0")
    testCompile("org.codehaus.groovy:groovy-all:2.4.5")
   // testCompile("com.mrll.javelin:javelin-common-test:0.0.11-SNAPSHOT")
    }

dependencyManagement {
    imports {
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-starter-parent:1.0.2.RELEASE"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}